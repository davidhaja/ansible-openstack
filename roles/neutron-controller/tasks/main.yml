---

- name: Create neutron user
  environment:
      OS_USERNAME: "admin"
      OS_PASSWORD: "{{ admin_pass }}"
      OS_PROJECT_NAME: "admin"
      OS_USER_DOMAIN_NAME: "Default"
      OS_PROJECT_DOMAIN_NAME: "Default"
      OS_AUTH_URL: "http://controller:35357/v3"
      OS_IDENTITY_API_VERSION: 3
  os_user:
      state: "present"
      name: "neutron"
      password: "{{ neutron_pass }}"
      domain: "default"
      enabled: True

- name: Add the admin role to the neutron user and service project
  environment:
      OS_USERNAME: "admin"
      OS_PASSWORD: "{{ admin_pass }}"
      OS_PROJECT_NAME: "admin"
      OS_USER_DOMAIN_NAME: "Default"
      OS_PROJECT_DOMAIN_NAME: "Default"
      OS_AUTH_URL: "http://controller:35357/v3"
      OS_IDENTITY_API_VERSION: 3
  shell: "openstack role add --project service --user neutron admin"

- name: Create the neutron service entity
  environment:
      OS_USERNAME: "admin"
      OS_PASSWORD: "{{ admin_pass }}"
      OS_PROJECT_NAME: "admin"
      OS_USER_DOMAIN_NAME: "Default"
      OS_PROJECT_DOMAIN_NAME: "Default"
      OS_AUTH_URL: "http://controller:35357/v3"
      OS_IDENTITY_API_VERSION: 3
  #os_keystone_service:
  #    state: present
  #    name: neutron
  #    description: "OpenStack Networking"
  #    service_type: "network"
  shell: 'openstack service create --name neutron --description "OpenStack Networking" network'

- name: Create the Networking service API endpoints
  environment:
      OS_USERNAME: "admin"
      OS_PASSWORD: "{{ admin_pass }}"
      OS_PROJECT_NAME: "admin"
      OS_USER_DOMAIN_NAME: "Default"
      OS_PROJECT_DOMAIN_NAME: "Default"
      OS_AUTH_URL: "http://controller:35357/v3"
      OS_IDENTITY_API_VERSION: 3
  shell: "openstack endpoint create --region RegionOne network public http://controller:9696; \
          openstack endpoint create --region RegionOne network internal http://controller:9696; \
          openstack endpoint create --region RegionOne network admin http://controller:9696;" 

- name: Install neutron packages
  become: yes
  apt: 
      name: "{{ item }}"
      state: "latest"
      update_cache: yes
  with_items: "{{ neutron_pkgs }}"

- name: Change neutron config file
  become: yes
  template:
      src: "neutron.j2"
      dest: "{{ neutron_conf_dir }}/neutron.conf"

- name: Change ml2 plugin conf file
  become: yes
  template:
      src: "ml2.j2"
      dest: "{{ ml2_plugin_conf_dir }}/ml2_conf.ini"

#- name: Change ml2 linuxbridge agent config file
#  become: yes
#  template:
#      src: "linuxbridge.j2"
#      dest: "{{ ml2_plugin_conf_dir }}/linuxbridge_agent.ini"

- name: Change open vswitch agent config file
  become: yes
  template:
      src: "ovs.j2"
      dest: "{{ ml2_plugin_conf_dir }}/openvswitch_agent.ini"

- name: Change l3 agent config file
  become: yes
  template:
      src: "l3agent.j2"
      dest: "{{ neutron_conf_dir }}/l3_agent.ini"

- name: Change dhcp agent config file
  become: yes
  template:
      src: "dhcpagent.j2"
      dest: "{{ neutron_conf_dir }}/dhcp_agent.ini"

- name: Change metadata agent config file
  become: yes
  template:
      src: "metadata.j2"
      dest: "{{ neutron_conf_dir }}/metadata_agent.ini"

- name: Populate the database neutron
  become: yes
  shell: 'su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron'

- name: Add br-int to controller
  become: yes
  openvswitch_bridge:
      bridge: "br-int"
      state: "present"

- name: Add br-tun to controller
  become: yes
  openvswitch_bridge:
      bridge: "br-tun"
      state: "present"

- name: Add br-ex to controller
  become: yes
  openvswitch_bridge:
      bridge: "br-ex"
      state: "present"
      #port: "eno3"

- name: Enable OVS interfaces
  become: yes
  shell: "ifconfig br-ex up;ifconfig br-tun up;ifconfig br-int up;"

#- name: Add public interface to br-ex
#  become: yes
#  shell: "ovs-vsctl add-port br-ex {{ public_interface_name_controller }}"

- name: Restart the Networking services
  become: yes
  service:
      name: "{{ item }}"
      state: "restarted"
  with_items: "{{ neutron_services }}"
