---

- name: Install the keystone packages
  become: yes
  apt: 
      name: "{{ item }}"
      state: "installed"
      update_cache: yes
  with_items: keystone_pkgs

- name: Copy keystone config file 
  become: yes
  template: 
      src: "keystone.j2"
      dest: "{{ keystone_conf_dir }}/keystone.conf"
  notify: restart keystone

- name: Populate the identity service database
  become: yes
  shell: 'su -s /bin/sh -c "keystone-manage db_sync" keystone'

- name: Initialize Fernet key repositories
  become: yes
  shell: 'keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone'

- name: Credential setup
  become: yes  
  shell: 'keystone-manage credential_setup --keystone-user keystone --keystone-group keystone'

- name: Bootstrap the identity service
  become: yes
  shell: 'keystone-manage bootstrap --bootstrap-password {{ admin_pass }} \
          --bootstrap-admin-url http://controller:35357/v3/ \
          --bootstrap-internal-url http://controller:35357/v3/ \
          --bootstrap-public-url http://controller:5000/v3/ \
          --bootstrap-region-id RegionOne'

- name: Edit apache2 config
  become: yes
  template:
      src: "apache.j2"
      dest: "{{ apache_conf_dir }}/apache2.conf"
  notify: restart apache2

- name: Remove default SQLite database
  become: yes
  file:
      path: "{{ default_sqlite_db }}"
      state: absent

- name: Create admin account environment file
  template:
      src: "admin.j2"
      dest: "{{ ansible_env.HOME }}/adminrc"

- name: Set the environment
  shell: "source {{ ansible_env.HOME }}/adminrc"

- name: Create service project
  os_project:
      state: present
      name: "service"
      description: "Service Project"
      domain_id: "default"
      enabled: True

- name: Create demo project
  os_project:
      state: present
      name: "demo"
      description: "Demo Project"
      domain_id: "default"
      enabled: True

- name: Create demo user
  os_user:
      state: present
      name: "demo"
      password: "{{ demo_password }}"
      default_project: "demo"
      domain: "default"
      enabled: True

- name: Create user role
  shell: "openstack role create user"

#- name: Add the user role to the demo project and user
#  os_user_role:
#      user: "demo"
#      project: "demo"
#      role: "user"
#      state: present

- name: Add the user role to the demo project and user
  shell: "openstack role add --project demo --user demo user"








































